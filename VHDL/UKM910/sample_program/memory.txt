c008 ; int0:     jump  main
a200 ; int1:     reti
a200 ; int2:     reti
a200 ; int3:     reti
a200 ; int4:     reti
a200 ; int5:     reti
a200 ; int6:     reti
a200 ; int7:     reti
8020 ; main:   load    spinit   # init-value for stack pointer
b000 ;         store   $sp      # store value in stack pointer register
801c ;                 load    const0
b005 ;                 store   $ien
9022 ;                 store   outputCharTest # initilize variable with 0
8021 ;                 load    vgaAddrStart   # store first VGA Adress in the third pointer
b003 ;                 store   $ptr3
801e ;                 load    constF
9fff ;                 store   debugAddr # All LEDs on
f018 ; mloop:  call    wait_for_knop  # wait until Knop is pulled
8022 ;                 load    outputCharTest # load the characters to be outputed
101d ;                 add             const1         # increment by 1
9022 ;                 store   outputCharTest
b023 ;                 store   ($ptr3)inc         # write Character to VGA
9fff ;                 store   debugAddr          # write Character to LED's
c011 ;         jump    mloop    # continue in loop
8fff ; wait_for_knop: # only return when the knop is used load    debugAddr
301f ;     and     maskRotEvent
d018 ;     bz      wait_for_knop # knob not pushed or rotated
a100 ;         ret
0000 ; const0:                 .word 0x0000  # constant zero
0001 ; const1:                 .word 0x0001  # constant one
000f ; constF:                 .word 0x000F # constant 0xF
e000 ; maskRotEvent:   .word 0xE000  # mask either rotary knob event
0600 ; spinit:                 .word 0x0600  # stack pointer init value
0800 ; vgaAddrStart:       .word       0x0800  # First Adress for the VGA controller
0000 ; outputCharTest: .word 0x0000
